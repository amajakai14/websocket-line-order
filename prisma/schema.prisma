// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tbl_customer {
  id               Int                  @id @default(autoincrement())
  mail_address     String               @unique
  login_id         String               @unique
  password         String
  created_at       DateTime?            @default(now())
  updated_at       DateTime?
  menus            tbl_menu[]
  courses          tbl_course[]
  tables           tbl_table[]
  courses_on_menus tbl_course_on_menu[]
}

model tbl_table {
  id          Int     @id @default(autoincrement())
  table_name  String
  is_occupied Boolean

  customer    tbl_customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  customer_id Int
}

model tbl_menu {
  id             Int                  @id @default(autoincrement())
  menu_name      String
  menu_type      String
  price          Int                  @default(0)
  available      Boolean              @default(true)
  created_at     DateTime?            @default(now())
  updated_at     DateTime?
  customer       tbl_customer         @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  customer_id    Int
  course_on_menu tbl_course_on_menu[]
}

model tbl_course_on_menu {
  course      tbl_course   @relation(fields: [course_id], references: [id])
  course_id   Int
  menu        tbl_menu     @relation(fields: [menu_id], references: [id])
  menu_id     Int
  customer    tbl_customer @relation(fields: [customer_id], references: [id])
  customer_id Int

  @@id([course_id, menu_id])
}

model tbl_course {
  id               Int                  @id @default(autoincrement())
  course_name      String
  course_timelimit Int?                 @default(90)
  course_priority  Int?
  created_at       DateTime?            @default(now())
  updated_at       DateTime?
  customer         tbl_customer         @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  customer_id      Int
  course_on_menu   tbl_course_on_menu[]
}

model tbl_channel_provider {
  id          String      @id @unique
  table_id    Int
  customer_id Int
  course_id   Int
  status      String
  time_start  DateTime?   @default(now())
  time_end    DateTime?
  orders      tbl_order[]

  @@unique([customer_id, table_id])
}

model tbl_order {
  id           Int                  @id @default(autoincrement())
  menu_id      String
  order_amount Int
  total_price  Int
  process_type String
  created_at   DateTime?            @default(now())
  updated_at   DateTime?
  channels     tbl_channel_provider @relation(fields: [channel_id], references: [id], onDelete: Cascade)
  channel_id   String
}
